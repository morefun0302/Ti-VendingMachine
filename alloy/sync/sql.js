function Migrator(e,t){this.db=t,this.dbname=e.adapter.db_name,this.table=e.adapter.collection_name,this.idAttribute=e.adapter.idAttribute,this.column=function(e){var t=e.split(/\s+/),i=t[0];switch(i.toLowerCase()){case"string":case"varchar":case"date":case"datetime":Ti.API.warn('"'+i+'" is not a valid sqlite field, using TEXT instead');case"text":i="TEXT";break;case"int":case"tinyint":case"smallint":case"bigint":case"boolean":Ti.API.warn('"'+i+'" is not a valid sqlite field, using INTEGER instead');case"integer":i="INTEGER";break;case"double":case"float":case"decimal":case"number":Ti.API.warn('"'+e+'" is not a valid sqlite field, using REAL instead');case"real":i="REAL";break;case"blob":i="BLOB";break;case"null":i="NULL";break;default:i="TEXT"}return t[0]=i,t.join(" ")},this.createTable=function(e){var t=[],i=!1;for(var n in e.columns)n===this.idAttribute&&(i=!0),t.push(n+" "+this.column(e.columns[n]));i||this.idAttribute!==ALLOY_ID_DEFAULT||t.push(ALLOY_ID_DEFAULT+" TEXT UNIQUE");var o="CREATE TABLE IF NOT EXISTS "+this.table+" ( "+t.join(",")+")";this.db.execute(o)},this.dropTable=function(){this.db.execute("DROP TABLE IF EXISTS "+this.table)},this.insertRow=function(e){var t=[],i=[],n=[],o=!1;for(var r in e)r===this.idAttribute&&(o=!0),t.push(r),i.push(e[r]),n.push("?");o||this.idAttribute!==ALLOY_ID_DEFAULT||(t.push(this.idAttribute),i.push(util.guid()),n.push("?")),this.db.execute("INSERT INTO "+this.table+" ("+t.join(",")+") VALUES ("+n.join(",")+");",i)},this.deleteRow=function(e){var t="DELETE FROM "+this.table,i=_.keys(e),n=i.length,o=[],r=[];n&&(t+=" WHERE ");for(var s=0;n>s;s++)o.push(i[s]+" = ?"),r.push(e[i[s]]);t+=o.join(" AND "),this.db.execute(t,r)}}function Sync(e,t,i){var n,o=t.config.adapter.collection_name,r=t.config.columns,s=t.config.adapter.db_name||ALLOY_DB_DEFAULT,a=null;switch(e){case"create":case"update":a=function(){var e={};t.id||(t.id=t.idAttribute===ALLOY_ID_DEFAULT?util.guid():null,e[t.idAttribute]=t.id,t.set(e,{silent:!0}));var i=[],a=[],l=[];for(var c in r)i.push(c),a.push(t.get(c)),l.push("?");var d="REPLACE INTO "+o+" ("+i.join(",")+") VALUES ("+l.join(",")+");";if(n=Ti.Database.open(s),n.execute("BEGIN;"),n.execute(d,a),null===t.id){var h="SELECT last_insert_rowid();",u=n.execute(h);u&&u.isValidRow()?(t.id=u.field(0),e[t.idAttribute]=t.id,t.set(e,{silent:!0})):Ti.API.warn("Unable to get ID from database for model: "+t.toJSON()),u&&u.close()}return n.execute("COMMIT;"),n.close(),t.toJSON()}();break;case"read":var l=i.query||"SELECT * FROM "+o;n=Ti.Database.open(s);var c;c=_.isString(l)?n.execute(l):n.execute(l.statement,l.params);for(var d=0,h=[];c.isValidRow();){var u={},p=0;p=_.isFunction(c.fieldCount)?c.fieldCount():c.fieldCount,_.times(p,function(e){var t=c.fieldName(e);u[t]=c.fieldByName(t)}),h.push(u),d++,c.next()}c.close(),n.close(),t.length=d,a=1===d?h[0]:h;break;case"delete":var l="DELETE FROM "+o+" WHERE "+t.idAttribute+"=?";n=Ti.Database.open(s),n.execute(l,t.id),n.close(),t.id=null,a=t.toJSON()}a?(_.isFunction(i.success)&&i.success(a),"read"===e&&t.trigger("fetch")):_.isFunction(i.error)&&i.error(a)}function GetMigrationFor(e,t){var i=null,n=Ti.Database.open(e);n.execute("CREATE TABLE IF NOT EXISTS migrations (latest TEXT, model TEXT);");var o=n.execute("SELECT latest FROM migrations where model = ?;",t);if(o.isValidRow())var i=o.field(0)+"";return o.close(),n.close(),i}function Migrate(e){var t=e.migrations||[],i={};t.length&&t[t.length-1](i);var n=e.prototype.config;n.adapter.db_name||(n.adapter.db_name=ALLOY_DB_DEFAULT);var o=new Migrator(n),r=n.adapter.migration===void 0||null===n.adapter.migration?i.id:n.adapter.migration;if(r===void 0||null===r){var s=Ti.Database.open(n.adapter.db_name);return o.db=s,o.createTable(n),s.close(),void 0}r+="";var a,l=GetMigrationFor(n.adapter.db_name,n.adapter.collection_name);if(l!==r){if(l&&l>r?(a=0,t.reverse()):a=1,db=Ti.Database.open(n.adapter.db_name),o.db=db,db.execute("BEGIN;"),t.length)for(var c=0;t.length>c;c++){var d=t[c],h={};if(d(h),a){if(h.id>r)break;if(l>=h.id)continue}else{if(r>=h.id)break;if(h.id>l)continue}var u=a?"up":"down";_.isFunction(h[u])&&h[u](o)}else o.createTable(n);db.execute("DELETE FROM migrations where model = ?",n.adapter.collection_name),db.execute("INSERT INTO migrations VALUES (?,?)",r,n.adapter.collection_name),db.execute("COMMIT;"),db.close(),o.db=null}}function installDatabase(e){var t=e.adapter.db_file,i=e.adapter.collection_name,n=/(^|.*\/)([^\/]+)\.[^\/]+$/,o=t.match(n);if(null===o)throw'Invalid sql database filename "'+t+'"';e.adapter.db_name=e.adapter.db_name||o[2];var r=e.adapter.db_name;Ti.API.debug('Installing sql database "'+t+'" with name "'+r+'"');for(var s=Ti.Database.install(t,r),a=s.execute('pragma table_info("'+i+'");'),l={};a.isValidRow();){var c=a.fieldByName("name"),d=a.fieldByName("type");l[c]=d,c!==ALLOY_ID_DEFAULT||e.adapter.idAttribute||(e.adapter.idAttribute=ALLOY_ID_DEFAULT),a.next()}if(e.columns=l,a.close(),e.adapter.idAttribute){if(!_.contains(_.keys(e.columns),e.adapter.idAttribute))throw'config.adapter.idAttribute "'+e.adapter.idAttribute+'" not found in list of columns for table "'+i+'"\n'+"columns: ["+_.keys(e.columns).join(",")+"]"}else{Ti.API.info('No config.adapter.idAttribute specified for table "'+i+'"'),Ti.API.info('Adding "'+ALLOY_ID_DEFAULT+'" to uniquely identify rows');var h=[],u=[];_.each(e.columns,function(e,t){u.push(t),h.push(t+" "+e)});var p=u.join(",");s.execute("ALTER TABLE "+i+" RENAME TO "+i+"_temp;"),s.execute("CREATE TABLE "+i+"("+h.join(",")+","+ALLOY_ID_DEFAULT+" TEXT UNIQUE);"),s.execute("INSERT INTO "+i+"("+p+","+ALLOY_ID_DEFAULT+") SELECT "+p+",CAST(_ROWID_ AS TEXT) FROM "+i+"_temp;"),s.execute("DROP TABLE "+i+"_temp;"),e.columns[ALLOY_ID_DEFAULT]="TEXT UNIQUE",e.adapter.idAttribute=ALLOY_ID_DEFAULT}s.close()}var _=require("alloy/underscore")._,util=require("alloy/sync/util"),ALLOY_DB_DEFAULT="_alloy_",ALLOY_ID_DEFAULT="alloy_id",cache={config:{},Model:{}};module.exports.beforeModelCreate=function(e,t){if(cache.config[t])return cache.config[t];throw"No support for Titanium.Database in MobileWeb environment."},module.exports.afterModelCreate=function(e,t){return cache.Model[t]?cache.Model[t]:(e||(e={}),e.prototype.idAttribute=e.prototype.config.adapter.idAttribute,Migrate(e),cache.Model[t]=e,e)},module.exports.sync=Sync;